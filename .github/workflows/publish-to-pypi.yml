name: Publish to PyPI

on:
  release:
    types:
      - published

permissions:
  id-token: write
  contents: read

jobs:
  publish_to_pypi:
    name: Publish to PyPI on new release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch requests

      - name: Build and publish package
        id: publish
        env:
          HATCH_INDEX_USER: __token__
          HATCH_INDEX_AUTH: ${{ secrets.PYPI_TOKEN }}
        run: |
          # Extract version from pyproject.toml
          VERSION=$(python -c "import tomllib; print(tomllib.load(open('pyproject.toml', 'rb'))['project']['version'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Check if version already exists
          if python -c "import requests, sys;\ntry:\n    r = requests.get(f'https://pypi.org/pypi/panda-agi/{VERSION}/json')\n    sys.exit(r.status_code != 200)\nexcept Exception:\n    sys.exit(1)"; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Version $VERSION already exists on PyPI. Skipping publish."
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Publishing panda-agi $VERSION to PyPI"
            hatch build
            hatch publish
          fi

      - name: Skip publish (version already exists)
        if: steps.publish.outputs.exists == 'true'
        run: |
          echo "Version ${{ steps.publish.outputs.version }} already exists on PyPI. Skipping publish."
